# Plot
p <- cpi_df %>%
filter(date >= start_graphic) %>%
ggplot(aes(date, change, color=time_length,label=label_percent()(round(last_value,3)))) +
{if(include_3_6)geom_line(size=1.6)} +
#geom_hline(yintercept = pre_trend, linetype="dashed", color="#A4CCCC") +
geom_col(aes(date, OneMonth), alpha=column_alpha, size=0, show.legend = FALSE) +
geom_text_repel(
show.legend=FALSE, nudge_x = 40, min.segment.length = Inf, size=6
) +
labs(
x="", y="",
title=title,
subtitle = paste0(
"Core CPI inflation, monthly percentage change, annualized."
),
caption = "All items less food and energy, monthly percent change, BLS, Author's calculations. Mike Konczal."
) +
theme_lass +
scale_color_manual(values=colors) +
scale_y_continuous(labels = scales::percent) +
scale_x_date(date_labels = "%b\n%Y", breaks=breaks_value) +
theme(
panel.grid.major.y = element_line(size=0.5),
legend.position = legend.position.c,
legend.text = element_text(size=15)
)
if(add_above_labels){
p <- p + geom_text(aes(x=date, y=OneMonth, label=above_label), nudge_y = 0.003, size=2.7, color="#A4CCCC")
}
return(p)
}
# A function to generate a stacked bar chart visualizing the contribution to inflation.
#
# Args:
#   cpi_data: Data frame containing the CPI data.
#   item_array: Vector of item names to be included in the plot.
#   start_date: Date from which to start plotting.
#   title: Title of the plot (default is NA).
#   date_breaks_length: Length of date breaks (default is 12).
#
# Returns:
#   A ggplot object.
stacked_graphic <- function(cpi_data, item_array, start_date, title = NA, palette = "RdYlGn", date_breaks_length = 12, add_labels = FALSE, legend.position = c(0.9,0.85)){
date_breaks <- generate_dates(cpi_data$date, date_breaks_length)
cpi_data %>% filter(item_name %in% item_array) %>%
filter(date >= start_date) %>%
mutate(num_label = round(100*Wchange1a, 1)) %>% mutate(num_label = ifelse(abs(num_label) < 0.16, NA, num_label)) %>%
ggplot(aes(x = date, y = Wchange1a, fill = item_name, label = num_label)) +
geom_bar(stat = 'identity', size=0) + theme_lass +
labs(y = NULL,
x = NULL,
title = title,
subtitle = "Monthly Contribution to Inflation, Annualized.",
caption ="BLS, CPI, 2022 weights prior to 2023, seasonally adjusted. Author's calculation. Mike Konczal") +
scale_fill_brewer(palette=palette) +
scale_y_continuous(labels = percent) +
scale_x_date(date_labels = "%b\n%Y", breaks=date_breaks) +
{if(add_labels)geom_text(size = 4, position = position_stack(vjust = 0.5), color="black")} +
theme(legend.position = legend.position, legend.title = element_blank(), legend.text = element_text(size=18),
axis.text.x = element_text(size=14), axis.text.y = element_text(size=19))
}
onion_chart <- function(cpi_data, start_date, breaks_length = 12, title = NA){
date_breaks <- generate_dates(cpi_data$date, breaks_length)
three_categories <- cpi_data %>%
filter(item_name %in% c("Services less energy services", "Shelter", "Commodities less food and energy commodities")) %>%
mutate(item_name = str_replace_all(item_name, "Commodities less food and energy commodities", "Core_goods")) %>%
select(date, item_name, Wchange1a) %>%
pivot_wider(names_from = item_name, values_from = Wchange1a) %>%
mutate(`Rest of core services` = `Services less energy services` - `Shelter`) %>%
select(-`Services less energy services`) %>%
pivot_longer(c(Shelter, `Rest of core services`, Core_goods), names_to = "item_name", values_to = "Wchange1a") %>%
mutate(item_name = str_replace_all(item_name, "Core_goods", "Core goods")) %>%
mutate(item_name = factor(item_name, levels = c("Core goods", "Shelter", "Rest of core services"))) %>%
mutate(num_label = round(100 * Wchange1a, 1)) %>%
mutate(num_label = ifelse(abs(num_label) < 0.16, NA, num_label))
three_trend_2018_2020 <- three_categories %>%
filter(date <= "2020-01-01" & date >= "2018-01-01") %>%
select(item_name, Wchange1a) %>%
group_by(item_name) %>%
summarize(geometric_mean = (prod(1 + Wchange1a))^(1 / n()) - 1)
three_categories %>%
left_join(three_trend_2018_2020, by="item_name") %>%
filter(date >= start_date) %>%
ggplot(aes(x = date, y = Wchange1a, fill=item_name)) +
geom_bar(stat = 'identity', size=0) +
theme(legend.position = "bottom", legend.title = element_blank()) +
facet_grid(~item_name) +
labs(y = NULL,
x = NULL,
title = title,
subtitle = "Monthly contribution to inflation, annualized. Yellow line is 2018-19 geometric mean.",
caption ="BLS, CPI, 2022 weights prior to 2023, seasonally adjusted. Author's calculation. Mike Konczal.") +
theme_lass +
scale_fill_brewer(palette="RdPu", name = "item_name") +
scale_y_continuous(labels = percent) +
scale_x_date(date_labels = "%b\n%Y", breaks = date_breaks) +
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=19)) +
geom_line(aes(date,geometric_mean), color="#E2E47E", size=1.4)
}
onion_chart2 <- function(cpi_data, start_date, title = NA){
date_breaks <- generate_dates(cpi_data$date, date_breaks_length)
three_categories <- cpi_data %>%
filter(date > start_date, item_name %in% c("Services less energy services", "Shelter", "Commodities less food and energy commodities")) %>%
mutate(item_name = str_replace_all(item_name, "Commodities less food and energy commodities", "Core_goods")) %>%
select(date, item_name, Wchange1a) %>%
pivot_wider(names_from = item_name, values_from = Wchange1a) %>%
mutate(`Rest of core services` = `Services less energy services` - `Shelter`) %>%
select(-`Services less energy services`) %>%
pivot_longer(c(Shelter, `Rest of core services`, Core_goods), names_to = "item_name", values_to = "Wchange1a") %>%
mutate(item_name = str_replace_all(item_name, "Core_goods", "Core goods")) %>%
mutate(item_name = factor(item_name, levels = c("Core goods", "Shelter", "Rest of core services"))) %>%
mutate(num_label = round(100 * Wchange1a, 1)) %>%
mutate(num_label = ifelse(abs(num_label) < 0.16, NA, num_label))
three_categories %>%
ggplot(aes(x = date, y = Wchange1a, fill=item_name)) +
geom_bar(stat = 'identity', size=0) +
theme(legend.position = "bottom", legend.title = element_blank()) +
facet_grid(~item_name) +
labs(y = NULL,
x = NULL,
title = title,
subtitle = "Monthly contribution to inflation, annualized.",
caption ="BLS, CPI, 2022 weights prior to 2023, seasonally adjusted. Author's calculation. Mike Konczal") +
theme_lass +
scale_fill_brewer(palette="RdPu", name = "item_name") +
scale_y_continuous(labels = percent) +
scale_x_date(date_labels = "%b\n%Y", breaks = MI_dates_three_categories) +
theme(axis.text.x = element_text(size=14), axis.text.y = element_text(size=19))
}
#####
subtract_cpi_items <- function(cpi, start_date, base_item, subtract_array,
add_on_array = NA, rest_name_variable = "Rest of Variable"){
c1 <- cpi %>% filter(date >= start_date) %>%
filter(item_name %in% subtract_array) %>%
select(date, Wchange1a) %>%
group_by(date) %>%
summarize(total_rest = sum(Wchange1a))
c2 <- cpi %>%
filter(item_name == base_item) %>%
select(date, Wchange1a) %>%
left_join(c1, by="date") %>%
mutate(Wchange1a = Wchange1a - total_rest) %>%
mutate(item_name = rest_name_variable) %>%
select(date, item_name, Wchange1a)
if(!is.na(add_on_array))
c3 <- cpi %>%
filter(item_name %in% add_on_array) %>%
select(date, item_name, Wchange1a)
c <- cpi %>% filter(date >= start_date) %>%
filter(item_name %in% subtract_array) %>%
select(date, item_name, Wchange1a) %>%
rbind(c2)
if(!is.na(add_on_array))
c <- c %>% rbind(c3)
c <- c %>%
arrange(date) %>%
filter(date >= start_date) %>%
mutate(num_label = round(100*Wchange1a, 1)) %>% mutate(num_label = ifelse(abs(num_label) < 0.16, NA, num_label))
return(c)
}
draw_ridgeline <- function(cpi, item_list, top_cut = 0.85, bottom_cut = 0.15, title = NA) {
median_data <- cpi %>%
filter(item_name %in% item_list | item_name == "Owners' equivalent rent of residences") %>%
filter(!is.na(date)) %>%
arrange(date) %>%
group_by(date) %>%
mutate(normalized = sum(weight)) %>%
mutate(weightN = weight / normalized) %>%
arrange(Pchange3) %>%
mutate(cumsum = cumsum(weight) / 100) %>%
mutate(cumsumN = cumsum(weightN)) %>%
ungroup() %>%
mutate(Pchange3a = (1 + Pchange3)^4 - 1)
quarters_backwards <- (month(max(cpi$date)) + c(0, 3, 6, 9) - 1) %% 12 + 1
# THIS IS THE GRAPHIC - 30 percent-trimmed distribution
median_data %>%
mutate(dateF = as.factor(date)) %>%
filter(cumsumN <= top_cut & cumsum >= bottom_cut) %>%
filter(date >= "2017-06-01") %>%
filter(date != "2020-06-01") %>%
filter(month(date) %in% quarters_backwards) %>%
mutate(monthC = format(date, "%B, %Y")) %>%
mutate(monthC = fct_reorder(monthC, date)) %>%
mutate(monthCR = fct_rev(monthC)) %>%
ggplot(aes(x = Pchange3a, y = monthCR, fill = stat(x))) +
geom_density_ridges_gradient() +
scale_fill_viridis(option = "H") +
theme_ridges() +
theme_lass +
theme(legend.position = "none") +
scale_x_continuous(labels = percent) +
labs(
title = title,
subtitle = "Distribution of the Cleveland Fed's Median/Trimmed-Mean CPI price basket, 3-month change annualized, with components\nwhose expenditure weights fall above/below the 85/15th percentile of price changes removed.",
x = "Three Month Percent Change", y = "", caption = "OER is treated as one value, instead of broken out by region and manually seasonally adjusted as per Cleveland Fed's methodology.Some 2020s removed as negative outlier. Mike Konczal"
) +
theme(
plot.title.position = "plot", legend.position = "none", legend.title = element_blank(),
plot.title = element_text(size = 25, margin = margin(0, 0, 5, 0)),
plot.subtitle = element_text(size = 15),
plot.caption = element_text(size = 10, face = "italic"),
axis.text.y = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 12)
)
}
unadjusted_analysis <- function(cpi_data, years_array, title = NA) {
cpi_data %>%
filter(series_id == "CUUR0000SA0L1E", period != "M13") %>%
select(date, value) %>%
mutate(month = month(date), year = as.factor(year(date))) %>%
mutate(pchange1 = value / lag(value, 1) - 1) %>%
filter(year(date) %in% years_array) %>%
ggplot(aes(month, pchange1, color = year)) +
geom_line(size = 1.2) +
theme_lass +
scale_x_continuous(breaks = 1:12, labels = month.abb) +
scale_y_continuous(labels = percent) +
geom_text_repel(aes(label = year),
size = 7,
data = . %>% group_by(year) %>% filter(month == 3) %>% ungroup()
) +
labs(
title = title,
subtitle = "Seasonally unadjusted values for core CPI inflation, 1-month percent change, not annualized.",
caption = "Inspired by Paul Romer's blog. Mike Konczal"
)
}
##### SET UP SOME THINGS #####
theme_lass <- theme_modern_rc(ticks = TRUE) + theme(
legend.position = "none", legend.title = element_blank(),
panel.grid.major.y = element_line(size = 0.5),
panel.grid.minor.y = element_blank(),
plot.title.position = "plot",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(size = 25, face = "bold"),
plot.subtitle = element_text(size = 15, color = "white"),
plot.caption = element_text(size = 10, face = "italic"),
legend.text = element_text(size = 12),
axis.text.y = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 12, face = "bold"),
strip.text = element_text(face = "bold", color = "white", hjust = 0.5, size = 10),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
strip.background = element_blank()
) +
theme(
text = element_text(family = "Public Sans"),
plot.title = element_text(family = "Publico Banner"),
plot.subtitle = element_text(family = "Publico Banner"),
plot.caption = element_text(family = "Public Sans"),
strip.text = element_text(family = "Public Sans")
)
cpi_versus_pce <- function(cpi_df, compare_length = 6, start_graphic = "2014-01-01", breaks_value = 6, title="",
legend.position.c = c(0.5,0.60), colors = c("6-Month Core CPI Change" = "#BA68C8", "6-Month Core PCE Change" = "#4F97D7"),
label_length = 6,
column_alpha=0.2) {
getSymbols("PCEPILFE", src = "FRED")
# Convert the data to a tibble
pce_data <- data.frame(date = index(get("PCEPILFE")), Value = coredata(get("PCEPILFE"))) %>%
as_tibble() %>% rename(core_pce6A = PCEPILFE) %>%
mutate(core_pce6A = core_pce6A/lag(core_pce6A, 6),
core_pce6A = core_pce6A^2 - 1)
breaks_value <- generate_dates(cpi_df$date, breaks_value)
# Data manipulation
cpi_df <- make_three_six_data(cpi_df, "All items less food and energy", 6) %>% filter(time_length == "6-Month Change") %>% select(date, core_cpi6A = change) %>%
left_join(pce_data, by="date") %>%
pivot_longer(core_cpi6A:core_pce6A, names_to = "time_length", values_to = "change") %>%
group_by(time_length) %>%
mutate(
last_value = ifelse(date==max(date),change,NA),
last_valueL = ifelse(!is.na(last_value), paste0(format(date, '%b, %Y'), "\n", label_percent(accuracy=0.1)(round(last_value,3))), NA)) %>%
ungroup() %>%
mutate(
time_length = case_when(
time_length == "core_cpi6A" ~ "6-Month Core CPI Change",
time_length == "core_pce6A" ~ "6-Month Core PCE Change",
TRUE ~ time_length
)
)
inf_diff <- cpi_df %>% select(-last_value, -last_valueL) %>%
pivot_wider(names_from = time_length, values_from = change) %>%
clean_names() %>%
mutate(inf_diff_1 = x6_month_core_cpi_change - x6_month_core_pce_change) %>%
select(date, inf_diff_1) %>%
mutate(time_length = "6-Month Core CPI Change")
# Plot
p <- cpi_df %>%
filter(date >= start_graphic) %>%
left_join(inf_diff, by=c("date","time_length")) %>%
ggplot(aes(date, change, color=time_length,label=last_valueL)) +
geom_line(size=1.6) +
geom_text_repel(
show.legend=FALSE, nudge_x = 85, min.segment.length = Inf
) +
geom_col(aes(date, inf_diff_1), alpha=column_alpha, size=0, show.legend = FALSE) +
labs(
x="", y="",
title=title,
subtitle = "Core CPI inflation vs core PCE inflation, 6-month change, annualized. Bars measure difference between them.",
caption = "CPI: BLS, All items less food and energy. PCE: BEA, PCE excluding food and energy, Author's calculations. Mike Konczal."
) +
theme_lass +
scale_color_manual(values=colors) +
scale_y_continuous(labels = scales::percent) +
scale_x_date(date_labels = "%b\n%Y", breaks=breaks_value) +
theme(
panel.grid.major.y = element_line(size=0.5),
legend.position = legend.position.c,
legend.text = element_text(size=15)
)
return(p)
}
#Graphic 1: Overview
core_3_6_title <- "Core Inflation Eases in March"
g <- three_six_graphic(cpi, "All items less food and energy", "2018-01-01", "2020-01-01", "2022-01-01",
title = core_3_6_title, include_3_6 = TRUE, column_alpha = 0.2,
colors = c("3-Month Change" = "#2D779C", "6-Month Change" = "#A4CCCC"))
ggsave("graphics/g1_core_inflation.png", dpi="retina", width = 12, height=6.75, units = "in")
# CPI Analysis
# Written by: Mike Konczal
library(hrbrthemes)
library(ggrepel)
library(viridis)
library(ggridges)
library(gt)
library(govMacroTools)
library(tidyverse)
library(janitor)
# Download the data:
source("scripts/01_download_cpi_data.R")
# Load functions for drawing graphics:
source("scripts/02_general_graphic_scripts.R")
source("scripts/03_specific_graphic_scripts.R")
cpi <- create_cpi_changes(cpi_data)
#Get Core data results in a View Window
#View(
#  make_three_six_data(cpi, "All items less food and energy", 6) %>% select(-above_label, -value, -last_value) %>% arrange(desc(date))
#  )
#Graphic 1: Overview
core_3_6_title <- "Core Inflation Eases in March"
g <- three_six_graphic(cpi, "All items less food and energy", "2018-01-01", "2020-01-01", "2022-01-01",
title = core_3_6_title, include_3_6 = TRUE, column_alpha = 0.2,
colors = c("3-Month Change" = "#2D779C", "6-Month Change" = "#A4CCCC"))
ggsave("graphics/g1_core_inflation.png", dpi="retina", width = 12, height=6.75, units = "in")
# Graphic 2: Onion Chart
onion_title = "Inflation on Target Across Board"
start_onion_date <- max(cpi$date) %m-% months(30)
onion_chart(cpi, start_onion_date, title=onion_title)
ggsave("graphics/g2_onion_chart.png", dpi="retina", width = 12, height=6.75, units = "in")
# Graphic 3: Core Goods
goods_minus_used_autos <- subtract_cpi_items(cpi, "2018-01-01",
"Commodities less food and energy commodities",
"Transportation commodities less motor fuel", rest_name_variable = "Core goods ex autos")
stacked_graphic(goods_minus_used_autos, unique(goods_minus_used_autos$item_name),start_date = "2020-01-01",
palette = "Greens", title = "Auto Prices Taking Off Since Trump Took Office", date_breaks_length = 12, legend.position = c(0.7,0.85))
ggsave("graphics/g3_core_goods_breakdown.png", dpi="retina", width = 12, height=6.75, units = "in")
# Graphic 4: Core Services
subtract_array <- c("Shelter", "Medical care services", "Transportation services")
services_breakdown <- subtract_cpi_items(cpi, "2018-01-01", "Services less energy services",
subtract_array = subtract_array, add_on_array = "Food away from home")
stacked_graphic(services_breakdown, unique(services_breakdown$item_name), start_date = "2022-01-01",
title = "Transportation Services Drive Decline", date_breaks_length = 12, add_labels = TRUE, palette= "RdPu", legend.position = c(0.85,0.9))
ggsave("graphics/g4_services_breakdown.png", dpi="retina", width = 12, height=6.75, units = "in")
# Graphic 5: Food and Energy
stacked_graphic(cpi, c("Energy","Food"),start_date = "2019-01-01",title = "Energy Starts to Fall", date_breaks_length = 12)
ggsave("graphics/energy_food.png", dpi="retina", width = 12, height=6.75, units = "in")
# Graphic 6: Ridgeline Graphic
median_terms <- read_csv("weights/mediancpi_component_table.csv") %>% mutate(item_name = Component)
draw_ridgeline(cpi, median_terms$item_name, title="Price Distribution moved out, is now moving back.")
ggsave("graphics/g5_ridgeline.png", dpi="retina", width = 12, height=14, units = "in")
## Graphic 7: Seasonally Unadjusted
#unadjusted_analysis(cpi_data, c(2019,2022,2023, 2024), title="Unadjusted sliding into prepandemic values?")
#ggsave("graphics/g7.png", dpi="retina", width = 12, height=6.75, units = "in")
# Graphic 8: Versus PCE
cpi_versus_pce(cpi, breaks_value = 24, start_graphic = "2011-01-01", title="The Fed's PCE Target is Historically Lower Than CPI")
ggsave("graphics/cpi_versus_pce.png", dpi="retina", width = 12, height=6.75, units = "in")
# Graphic 9: Versus Housing PCE
housing_cpi_versus_pce(cpi, title="Housing's Weight Drives CPI and PCE Divergence")
ggsave("graphics/cpi_versus_pce_housing.png", dpi="retina", width = 12, height=6.75, units = "in")
# Graphic 10: 9.1 Breakdown, Quarterly
#pce_cpi_divergence_contributions(title="Housing's Weight Driving CPI and PCE Divergence")
#ggsave("graphics/cpi_versus_pce_9.1.png", dpi="retina", width = 12, height=6.75, units = "in")
source("2_january_unadjusted.R")
source("3_trump_tariffs.R")
# transportation services breakdown
subtract_array <- c("Car and truck rental", "Motor vehicle insurance", "Motor vehicle fees", "Public transportation","Motor vehicle maintenance and repair")
services_breakdown <- subtract_cpi_items(cpi, "2018-01-01", "Transportation services",
subtract_array = subtract_array)
stacked_graphic(services_breakdown, unique(services_breakdown$item_name), start_date = "2022-01-01",
title = "What's Happening in Transportation Services?", date_breaks_length = 12, add_labels = TRUE, palette= "RdPu", legend.position = c(0.6,0.9))
ggsave("graphics/g_ts.png", dpi="retina", width = 12, height=6.75, units = "in")
# Real Wages ----
cpi_rate <- cpi %>% filter(series_id == "CUSR0000SA0") %>%
select(date, cpi_rate = value)
ahe <- getFRED("CES0500000003", rename_variables = "ahe") %>%
inner_join(cpi_rate, by="date") %>%
mutate(real_wages = ahe/cpi_rate,
real_wages4m = real_wages/lag(real_wages, 4)-1,
real_wages1m = real_wages/lag(real_wages, 1)-1,
real_wages_Trump = real_wages/real_wages[date == "2025-01-01"]-1)
ahe %>%
filter(year(date) >= 2025) %>%
ggplot(aes(date, real_wages_Trump)) + geom_line() +
theme_lass +
geom_hline(yintercept = 0, color="white") +
scale_y_continuous(label = percent) +
scale_x_date(breaks = "1 month", date_labels = "%B\n%Y") +
labs(title = "Real Wages Up or Down Under President Trump?",
subtitle = "Change in Average Hourly Earnings Divided by Overall CPI, Since January 2025.",
caption = "Mike Konczal")
styler:::style_selection()
ahe %>%
filter(year(date) >= 2025) %>%
ggplot(aes(date, real_wages_Trump)) +
geom_line(size = 1.2) +
theme_lass +
geom_hline(yintercept = 0, color = "white") +
scale_y_continuous(label = percent) +
scale_x_date(breaks = "1 month", date_labels = "%B\n%Y") +
labs(
title = "Real Wages Up or Down Under President Trump?",
subtitle = "Change in Average Hourly Earnings Divided by Overall CPI, Since January 2025.",
caption = "Mike Konczal"
)
# Nobody is Coming Here Portfolio ----
cpi %>%
filter(item_name %in% c("Other lodging away from home including hotels and motels", "Airline fares")) %>%
filter(year(date) >= 2018) %>%
ggplot(aes(date, Pchange1)) +
geom_line() +
facet_wrap(~item_name, scales = "free") +
theme_classic(base_size = 18) +
geom_hline(yintercept = 0) +
scale_y_continuous(labels = percent) +
labs(subtitle="1-month percent change.",
x="",
y="",
caption="Mike Konczal")
# Nobody is Coming Here Portfolio ----
cpi %>%
filter(item_name %in% c("Other lodging away from home including hotels and motels", "Airline fares")) %>%
filter(year(date) >= 2018) %>%
ggplot(aes(date, Pchange1)) +
theme_lass +
geom_line(size = 1.2) +
facet_wrap(~item_name, scales = "free") +
theme_classic(base_size = 18) +
geom_hline(yintercept = 0) +
scale_y_continuous(labels = percent) +
labs(subtitle="1-month percent change.",
x="",
y="",
caption="Mike Konczal")
# Nobody is Coming Here Portfolio ----
cpi %>%
filter(item_name %in% c("Other lodging away from home including hotels and motels", "Airline fares")) %>%
filter(year(date) >= 2018) %>%
ggplot(aes(date, Pchange1)) +
theme_lass +
geom_line(size = 1.2) +
facet_wrap(~item_name, scales = "free") +
geom_hline(yintercept = 0) +
scale_y_continuous(labels = percent) +
labs(subtitle="1-month percent change.",
x="",
y="",
caption="Mike Konczal")
cpi %>%
filter(item_name %in% c("Other lodging away from home including hotels and motels", "Airline fares")) %>%
filter(year(date) >= 2012) %>%
ggplot(aes(date, Pchange1)) +
theme_lass +
geom_line(size = 1.2) +
facet_wrap(~item_name, scales = "free") +
geom_hline(yintercept = 0) +
scale_y_continuous(labels = percent) +
labs(subtitle="1-month percent change.",
x="",
y="",
caption="Mike Konczal")
cpi %>%
filter(item_name %in% c("Other lodging away from home including hotels and motels", "Airline fares")) %>%
filter(year(date) >= 2012) %>%
ggplot(aes(date, Pchange3)) +
#ggplot(aes(date, Pchange1)) +
theme_lass +
geom_line(size = 1.2) +
facet_wrap(~item_name, scales = "free") +
geom_hline(yintercept = 0) +
scale_y_continuous(labels = percent) +
labs(subtitle="1-month percent change.",
title = "Hotels and Airfare Prices are Falling"
x="",
# Nobody is Coming Here Portfolio ----
cpi %>%
filter(item_name %in% c("Other lodging away from home including hotels and motels", "Airline fares")) %>%
filter(year(date) >= 2012) %>%
ggplot(aes(date, Pchange3)) +
#ggplot(aes(date, Pchange1)) +
theme_lass +
geom_line(size = 1.2) +
facet_wrap(~item_name, scales = "free") +
geom_hline(yintercept = 0) +
scale_y_continuous(labels = percent) +
labs(subtitle="1-month percent change.",
title = "Hotels and Airfare Prices are Falling",
x="",
y="",
caption="Mike Konczal")
ggsave("graphics/nobody_is_coming_here.png", dpi="retina", width = 12, height=6.75, units = "in")
